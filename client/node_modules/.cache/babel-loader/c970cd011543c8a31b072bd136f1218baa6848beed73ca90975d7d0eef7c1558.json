{"ast":null,"code":"import _objectSpread from\"D:/hostel/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[token,setToken]=useState(localStorage.getItem('token'));// Set up axios defaults\nuseEffect(()=>{if(token){axios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);}else{delete axios.defaults.headers.common['Authorization'];}},[token]);// Check if user is logged in on app start\nuseEffect(()=>{const checkAuth=async()=>{if(token){try{const response=await axios.get('/api/auth/me');setUser(response.data.data);}catch(error){console.error('Auth check failed:',error);logout();}}setLoading(false);};checkAuth();},[token]);const login=async(email,password)=>{try{setLoading(true);const response=await axios.post('/api/auth/login',{email,password});const{user:userData,token:userToken}=response.data.data;setUser(userData);setToken(userToken);localStorage.setItem('token',userToken);toast.success('Login successful!');return{success:true};}catch(error){var _error$response,_error$response$data;const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Login failed';toast.error(message);return{success:false,error:message};}finally{setLoading(false);}};const register=async userData=>{try{setLoading(true);const response=await axios.post('/api/auth/register',userData);const{user:newUser,token:userToken}=response.data.data;setUser(newUser);setToken(userToken);localStorage.setItem('token',userToken);toast.success('Registration successful!');return{success:true};}catch(error){var _error$response2,_error$response2$data;const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Registration failed';toast.error(message);return{success:false,error:message};}finally{setLoading(false);}};const logout=()=>{setUser(null);setToken(null);localStorage.removeItem('token');delete axios.defaults.headers.common['Authorization'];toast.success('Logged out successfully');};const updateProfile=async profileData=>{try{setLoading(true);const formData=new FormData();Object.keys(profileData).forEach(key=>{if(profileData[key]!==null&&profileData[key]!==undefined){formData.append(key,profileData[key]);}});const response=await axios.put('/api/auth/profile',formData,{headers:{'Content-Type':'multipart/form-data'}});// Update user data\nconst updatedUser=_objectSpread(_objectSpread({},user),profileData);setUser(updatedUser);toast.success('Profile updated successfully!');return{success:true};}catch(error){var _error$response3,_error$response3$data;const message=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Profile update failed';toast.error(message);return{success:false,error:message};}finally{setLoading(false);}};const changePassword=async(currentPassword,newPassword)=>{try{setLoading(true);await axios.put('/api/auth/change-password',{currentPassword,newPassword});toast.success('Password changed successfully!');return{success:true};}catch(error){var _error$response4,_error$response4$data;const message=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Password change failed';toast.error(message);return{success:false,error:message};}finally{setLoading(false);}};const forgotPassword=async email=>{try{setLoading(true);await axios.post('/api/auth/forgot-password',{email});toast.success('Password reset link sent to your email!');return{success:true};}catch(error){var _error$response5,_error$response5$data;const message=((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Failed to send reset email';toast.error(message);return{success:false,error:message};}finally{setLoading(false);}};const resetPassword=async(token,newPassword)=>{try{setLoading(true);await axios.post('/api/auth/reset-password',{token,newPassword});toast.success('Password reset successfully!');return{success:true};}catch(error){var _error$response6,_error$response6$data;const message=((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Password reset failed';toast.error(message);return{success:false,error:message};}finally{setLoading(false);}};const value={user,token,loading,login,register,logout,updateProfile,changePassword,forgotPassword,resetPassword,isAuthenticated:!!user,isAdmin:(user===null||user===void 0?void 0:user.role)==='admin',isStudent:(user===null||user===void 0?void 0:user.role)==='student'};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","defaults","headers","common","concat","checkAuth","response","get","data","error","console","logout","login","email","password","post","userData","userToken","setItem","success","_error$response","_error$response$data","message","register","newUser","_error$response2","_error$response2$data","removeItem","updateProfile","profileData","formData","FormData","Object","keys","forEach","key","undefined","append","put","updatedUser","_objectSpread","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","forgotPassword","_error$response5","_error$response5$data","resetPassword","_error$response6","_error$response6$data","value","isAuthenticated","isAdmin","role","isStudent","Provider"],"sources":["D:/hostel/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  // Set up axios defaults\r\n  useEffect(() => {\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n  }, [token]);\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get('/api/auth/me');\r\n          setUser(response.data.data);\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          logout();\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, [token]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post('/api/auth/login', {\r\n        email,\r\n        password\r\n      });\r\n\r\n      const { user: userData, token: userToken } = response.data.data;\r\n      \r\n      setUser(userData);\r\n      setToken(userToken);\r\n      localStorage.setItem('token', userToken);\r\n      \r\n      toast.success('Login successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post('/api/auth/register', userData);\r\n\r\n      const { user: newUser, token: userToken } = response.data.data;\r\n      \r\n      setUser(newUser);\r\n      setToken(userToken);\r\n      localStorage.setItem('token', userToken);\r\n      \r\n      toast.success('Registration successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      setLoading(true);\r\n      const formData = new FormData();\r\n      \r\n      Object.keys(profileData).forEach(key => {\r\n        if (profileData[key] !== null && profileData[key] !== undefined) {\r\n          formData.append(key, profileData[key]);\r\n        }\r\n      });\r\n\r\n      const response = await axios.put('/api/auth/profile', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      // Update user data\r\n      const updatedUser = { ...user, ...profileData };\r\n      setUser(updatedUser);\r\n      \r\n      toast.success('Profile updated successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Profile update failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      setLoading(true);\r\n      await axios.put('/api/auth/change-password', {\r\n        currentPassword,\r\n        newPassword\r\n      });\r\n      \r\n      toast.success('Password changed successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Password change failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      setLoading(true);\r\n      await axios.post('/api/auth/forgot-password', { email });\r\n      \r\n      toast.success('Password reset link sent to your email!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to send reset email';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (token, newPassword) => {\r\n    try {\r\n      setLoading(true);\r\n      await axios.post('/api/auth/reset-password', {\r\n        token,\r\n        newPassword\r\n      });\r\n      \r\n      toast.success('Password reset successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Password reset failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n    forgotPassword,\r\n    resetPassword,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.role === 'admin',\r\n    isStudent: user?.role === 'student'\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}